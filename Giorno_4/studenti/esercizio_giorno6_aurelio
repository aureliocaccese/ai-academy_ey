from sentence_transformers import SentenceTransformer, util

# Carichiamo il modello MiniLM
# primo modello model = SentenceTransformer('sentence-transformers/all-MiniLM-L6-v2')
model = SentenceTransformer('paraphrase-MiniLM-L6-v2') # modello alternativo in locale 

frasi = [
    "Luca ha comprato una macchina nuova",
    "Luca si è appena comprato una macchina nuova.",
    "Oggi piove molto a Milano"
]

# Otteniamo i vettori (embedding) per ciascuna frase
embedding = model.encode(frasi, convert_to_tensor=True)
# Similarità tra prima e seconda frase (simili)
sim_1_2 = util.cos_sim(embedding[0], embedding[1])

# Similarità tra prima e terza frase (non correlate)
sim_1_3 = util.cos_sim(embedding[0], embedding[2])

print(f"Similarità tra frase 1 e 2: {sim_1_2.item():.4f}")
print(f"Similarità tra frase 1 e 3: {sim_1_3.item():.4f}")

# output:
# Frasi 1 e 2 abbiano similarità alta (es. > 0.85)
# Frasi 1 e 3 abbiano similarità bassa (es. < 0.4)